<?php
/**
 * @file
 *   a block module to display the bible from mongoDB
*/

function bible_module_block_view($delta = '') {
	switch ($delta){
		case 'bible_module':
			$block['subject'] = t('אתר התנך העולמי');
			if (user_access('access content')) {
				// Use our custom function to retrieve data.
				$result = bible_module_contents();
				//echo print_r($result);
				// Array to contain items for the block to render.
				$items = array();
				// Iterate over the resultset and format as links.
				foreach ($result as $node) {
					$items[] = array(
						'data' => l($node->title, 'node/' . $node->nid),
					); 
				}
				// No content in the last week.
				if (empty($items)) {
					$block['content'] = t('No posts available.');  
				}
				else {
					// Pass data through theme function.
					$block['content'] = theme('item_list', array('items' => $items));
				}
			}
		return $block;
	}
}

function bible_module_contents(){
	//Get today's date.
	$today = getdate();
	//Calculate the date a week ago.
	$start_time = mktime(0, 0, 0,$today['mon'],($today['mday'] - 7), $today['year']);
	//Get all posts from one week ago to the present.
	$end_time = time();
	//Use Database API to retrieve current posts.
	$query = db_select('node', 'n')
		->fields('n', array('nid', 'title', 'created'))
		->condition('status', 1) //Published.
		->condition('created', array($start_time, $end_time), 'BETWEEN')
		->orderBy('created', 'DESC') //Most recent first.
		->execute();
	return $query;
}

function bible_module_block_info() {
  $blocks['bible_module'] = array(
    // The name that will appear in the block list.
    'info' => t('Bible'),
    // Default setting.
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  return $blocks;
}

function bible_module_help($path, $arg) {
	switch ($path) {
		case "admin/help#bible_module":
			return '<p>' . t("A block module to display the bible from mongoDB") . '</p>';
			break;
	}
}


/*
function bible_module_menu() {
  $items = array();

  $items['admin/content/bibleIndex'] = array(
    'title' => 'מפתוח התנ"ך',
    'description' => 'מפתוח התנ"ך',
    'page callback' => 'bible_module_test',
    'access arguments' => array('administer bibleIndex'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 20,
  );
  
  $items['admin/content/bibleSites'] = array(
    'title' => 'אתרים במקרא',
    'description' => "אתרים במקרא",
    'page callback' => 'bible_module_test',
    'access arguments' => array('administer bibleIndex'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 25,
  );
  
  return $items;
}

function bible_module_test() {

	$header = array(t('nid'), t('title'), t('created'));
	
	$rows = array(
        		//array('row1col1', 'row2col2'),
        		//array('row2col1', 'row2col2'),
			);

	$query = db_select('node', 'n')
		->fields('n', array('nid', 'title', 'created'))
		->condition('status', 1) //Published.
		->orderBy('created', 'DESC') //Most recent first.
		->execute();
	
	foreach ($query as $node) {

    	$rows[] = array(
		  	($node->nid ? $node->nid : 'NULL'),
		  	($node->title ? l($node->title, "node/$node->nid") : t('Missing data for node @nid', array('@nid' => $node->nid))),
		  	($node->created ? $node->created : 'NULL'),
    	);
  	}
	
	$table = array(
    	'#theme' => 'table',
    	'#header' => $header,
    	'#rows' => $rows,
		'#empty' => "The table is empty",
  	);
	
   return $table;
}
*/